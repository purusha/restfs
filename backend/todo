
    add service.conf (our service configuration)

    https://github.com/mkuthan/example-akka-http/blob/master/src/main/resources/application.conf
    https://doc.akka.io/docs/akka/2.5/general/configuration.html#configuring-multiple-actorsystem

    ----------------------
	
    potrebbe essere utile fornire un API che fornisca   
    
        > solo parzialmente il contenuto di un file ... (OPEN op) 
        ( https://developer.mozilla.org/en-US/docs/Web/HTTP/Range_requests )
        impostando per esempio un Accept-Ranges: bytes o Accept-Ranges: lines
        ed accettando questo header in aggiunta (ed opzionale) e fornire una risposta adeguata
        
        > solo parzialmente il contenuto di una folder ... (OPEN liststatus)
        ( https://developer.mozilla.org/en-US/docs/Web/HTTP/Range_requests )
        
        > un modo per filtrare i contenuti di una folder in base a dei criteri:
        	tipo di risorsa, nome di risorsa, data di accesso/creazione ... ecc. ecc.


	> un modo per distruggere un file o una folder quando passa un determinato tempo
        
    ----------------------
            
    esporre lo swagger file per gli endpoint esposti
    
    ----------------------
    
    alternative al file system:
    
        1) neo4j
        2) elastic search && hbase
        3) https://github.com/Azure/azure-storage-java ( https://docs.microsoft.com/en-us/azure/storage/common/storage-samples-java )
        4) amazon S3
        5) https://github.com/yahoo/HaloDB
        6) MongoDB ( https://stackoverflow.com/questions/1619058/storing-directory-hierarchy-in-a-key-value-data-store )
        7) hbase  
        
    ----------------------
    
    come autenticare le call rest ??
    
        1) http base auth (static mapping on container conf)
        2) oAuth
        3) static authorization
        4) ???
        
    -------------------------------
    
    Storage Interface:
    
    use AbsolutePath instead of "/" + XXX
    
    -------------------------------
    
    add unit test 
    
    -------------------------------
    
    https://docs.beefree.io/connect-your-own-file-storage/
    
    -------------------------------
    
    when response is an error ... return always a json like:
    
    {
    	"logref": "3674a907-9c2a-478f-a6b6-47cdfd3e11fb",
    	"path": "/dir1/test/xxx/file.txt",
    	"containerId": "3674a907-9c2a-478f-a6b6-47cdfd3e11fb",
    	"message": "booo ... aaÃ²sijdfbasdfa sdf sajdfh asjd fasjdh fjash dfsjdfgsdjf g"
    }
    
    -------------------------------    
    
	nei json di risposta ogni campo di tipo data,
	viene formattato secondo uno standard scritto all'interno della classe
	relativa all'entity
	
	e se il client preferisse un dato tipo:
	
		> UNIX time with milliseconds
		> UNIX time without milliseconds
		> una formattazione diversa da quella impostata nell'entity !!? 
	    
    -------------------------------
    
